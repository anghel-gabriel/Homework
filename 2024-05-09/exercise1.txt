Exercitiu: 

Presupunem ca avem o firma de resurse umane și avem de-a face cu mai multe date referitoare la persoane care aplica pentru diferite joburi. 
Pentru a putea interoga mai ușor datele oamenilor avem nevoie de un obiect care sa conțină datele oamenilor, dar totodata sa aibă diferite metode pentru a accesa anumite date specifice.

O persoana va avea o structura de forma:
{ 
	nume: ‘Duhanes’,
	prenume: ‘Andrei’,
	anul_nasterii: 1990,	reședință: ‘Cluj-Napoca’,
	abilitati: [ ‘javascript’, ‘angular’,  ‘css’, ‘sql’],
	experienta: 3  (ani)
	descriere: ‘Sunt o persoana dornica sa învețe tehnologii noi, ….’
}

// O lista constanta din posibile abilități
Abilitati = [‘javascript’, ‘html’, ‘css’, ‘java’, ‘sql’, ‘python’, ‘ux’, ‘qa’, ‘angular’ ] 


O lista de astfel de persoane o sa fie primită, ex: [ Persoana1, Persoana2, Persoana3….]. 
Sa creezi o o funcție (persoaneFunction) care primește ca și parametru o astfel de lista, și returnează un obiect care are mai multe metode.

 const listaPersoane = persoaneFunction([ Persoana1, Persoana2, Persoana3…])

listaPersoane.listOutAllTheFullNames()

-> listare în consola a fiecărei persoane nume + prenume

listaPersoane.listOutTheEntireInformation()

-> listare în consola a datelor fiecărei persoane în formatul : Duhanes Andrei, 1990, Cluj-Napoca, 3 ani, Sunt o persoana…, javascript, angular, css

listaPersoane.getPeopleByAlphabeticalOrder()

-> returnare o lista cu Persoane în ordine alfabetică după nume

listaPersoane.getPeopleByYearsOfExperience(minYear)

-> minYear este parametru dat (gen 4, -> 4 ani) (returnare lista persoane care au experiență egala sau mai mare cu minYear)